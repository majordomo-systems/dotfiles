"$schema" = 'https://starship.rs/config-schema.json'

add_newline = true
palette = "tailwind"
format = """
[](surface0)\
$os\
$status\
$username\
$hostname\
[ ](fg:surface0)\
$directory\
$git_state\
$lua\
$nodejs\
$deno\
$package\
$docker_context\
$fill\
${custom.git_host}\
$git_branch\
${custom.since_last_commit}\
$git_commit\
$git_metrics\
$git_status\
$git_commit\
$cmd_duration\
$line_break\
$shell\
$character\
"""

[palettes.tailwind]
fg = "#ffffff"
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"
text = "#cdd6f4"
subtext1 = "#bac2de"
subtext0 = "#a6adc8"
overlay2 = "#9399b2"
overlay1 = "#7f849c"
overlay0 = "#6c7086"
surface2 = "#585b70"
surface1 = "#45475a"
surface0 = "#313244"
base = "#1e1e2e"
mantle = "#181825"
crust = "#11111b"

[os]
disabled = false
style = "bg:surface0 fg:text"

[os.symbols]
Alpine = ''
Amazon = ''
Android = ''
Arch = ''
CentOS = ''
Debian = ''
EndeavourOS = ''
Fedora = ''
FreeBSD = ''
Garuda = ''
Gentoo = ''
Linux = ''
Macos = ''
Manjaro = ''
Mariner = ''
Mint = ''
NetBSD = ''
NixOS = ' '
OpenBSD = ''
OpenCloudOS = ''
openEuler = ''
openSUSE = ''
OracleLinux = '⊂⊃'
Pop = ''
Raspbian = ''
Redhat = ''
RedHatEnterprise = ''
Solus = ''
SUSE = ''
Ubuntu = ''
Unknown = ''
Windows = ''

[docker_context]
format = '[ $context](sky) '

[lua]
format = '[󰢱 $version](blue) '

[package]
disabled = false
display_private = true
format = '[$symbol$version](flamingo) '
symbol = " "

[fill]
style = 'green'
symbol = " "
disabled = false

[status]
# '[\[$symbol$status$common_meaning$signal_name$maybe_int\]]($style) '
format = '$symbol'
style = 'bg:surface0 fg:blue'
# symbol = '[●\($status\)]($style)'
# success_symbol = '[●]($style)'
not_executable_symbol = '[ ⌽ \($status\)]($style)'
not_found_symbol = '[ ◎ \($status\)]($style)'
sigint_symbol = '[ \($status\)]($style)'
signal_symbol = '[ \($status\)]($style)'
# sigint_symbol = '[ ●\($status\)]($style)'
# signal_symbol = '[ ✕\($status\)]($style)'
recognize_signal_code = true
map_symbol = true
disabled = false

[sudo]
#           |
format = '[$symbol]($style)'
symbol = ' '
style = 'bold 9'
allow_windows = false
disabled = false

[username]
style_user = "bg:surface0 fg:text bold"
style_root = "bg:surface0 fg:text bold"
format = "[ $user]($style)"
disabled = false
show_always = true

[hostname]
style = "bg:surface0 fg:text bold"
ssh_only = false
ssh_symbol = '🌐 '
format = '[ on $hostname ]($style)'
trim_at = "."
disabled = false

[directory]
format = '[$path]($style)[$read_only]($read_only_style) '
style = 'bold bright-cyan'
read_only = " "
read_only_style = 'red'
# fish_style_pwd_dir_length = 1
home_symbol = "~"
truncation_symbol = '…/'
truncation_length = 3
truncate_to_repo = true # truncates directory to root folder if in github repo
use_os_path_sep = true

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "

[shell] #      _ |
# format = '[ ](bold 248)[$indicator]($style) '
style = 'bold bright-blue'
unknown_indicator = 'shell'
powershell_indicator = 'powershell'
fish_indicator = 'fish'
bash_indicator = 'bash'
zsh_indicator = 'zsh'
disabled = true

[character]
# success_symbol = '[](fg:bold light_green)'
# success_symbol = '[☍](fg:bold light_green)'
# success_symbol = '[☡](fg:bold light_green)'
# success_symbol = "[[ ](fg)](fg)"
# success_symbol = "[[>_](fg)](fg)"
success_symbol = ' [ ](white bold)'
# error_symbol = '[✘](bold red)'
error_symbol = "[ ❯](red)"
vimcmd_symbol = "[ ❮](green)"

[time]
format = '[ ](bold 248)[$time]($style) '
style = 'bold bright-cyan'
time_format = '%H:%M'
use_12hr = false
disabled = false

[git_branch]
format = '[$symbol$branch(:$remote_branch)]($style) '
style = "white"
symbol = ' '

[git_status]
ahead = '[⇡${count}](lavender) '
behind = '😰 ${count}'
conflicted = '🏳'
deleted = '󰗨 ${count} '
diverged = '⇕⇡${ahead_count}⇣${behind_count} '
format = "[[($conflicted$untracked$modified$staged$renamed$deleted)](218)($ahead_behind$stashed)]($style)"
modified = '[ ${count}](peach) '
renamed = '👅'
staged = '[+$count](green) '
stashed = " ${count} "
style = "red"
untracked = "[ ${count}](sapphire) "
up_to_date = ''

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "fg"
cherry_pick = '[🍒PICKING](red)'

[git_metrics]
disabled = false
format = '[+$added](green)|[-$deleted](maroon) '
only_nonzero_diffs = true

[cmd_duration]
format = "[   $duration]($style) "
disabled = false
style = "yellow"
show_notifications = false
show_milliseconds = false
min_time = 2000
min_time_to_notify = 1000

[nodejs]
format = '[$symbol($version)]($style) '
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts', 'tsx']
detect_files = ['node_modules', '.yarn']
symbol = ' '
disabled = false

# [nodejs]
# format = '[ ](bold green)[$symbol($version)]($style) '
# symbol = 'Node'
# style = 'bright-purple'
# #detect_extensions = []
# detect_files = ['package.json', '.node-version', '.nvmrc']
# detect_folders = ['node_modules']
# not_capable_style = 'red'
# version_format = '${major}.${minor}'
# disabled = false

[bun]
format = '[ ](bold green)[$symbol($version)]($style) '
symbol = 'Bun'
style = 'bright-purple'
detect_files = ['bun.lockb', 'bunfig.toml']
version_format = '${major}.${minor}'
disabled = true

[deno]
format = '[ ](bold green)[$symbol($version)]($style) '
symbol = 'Deno'
style = 'bright-purple'
detect_files = ['deno.json', 'deno.jsonc', 'deno.lock', 'mod.ts', 'mod.js', 'deps.ts', 'deps.js']
version_format = '${major}.${minor}'
disabled = true

[python]
format = '[ ](bold green)[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style) '
symbol = 'PY' # 󰌠  🐍 👾  |
style = 'bright-purple'
#detect_files = [['.python-version', 'Pipfile', '__init__.py', 'pyproject.toml', 'requirements.txt', 'setup.py', 'tox.ini', 'pixi.toml']]
version_format = '${major}.${minor}'
disabled = false

[java]
# ⚰︎ ♲ ⇞ ⚕︎ ☥ º                                 |
format = '[ ](bold green)[${symbol}(${version} )]($style)'
symbol = 'Java'
style = 'bright-purple'
detect_extensions = ['java', 'class', 'gradle', 'jar', 'cljs', 'cljc']
detect_files = ['pom.xml', 'build.gradle.kts', 'build.sbt', '.java-version', 'deps.edn', 'project.clj', 'build.boot', '.sdkmanrc']
version_format = '${major}.${minor}'
disabled = false

[c]
format = '[ ](bold green)[$symbol]($style)[$version(\($name\))]($style) '
symbol = 'C' #    |
style = 'bright-purple'
detect_extensions = ['c', 'h']
#commands = [['cc', '--version'], ['gcc', '--version'], ['clang', '--version']]
version_format = '${major}.${minor}'
disabled = false

[dotnet]
format = '[ ](bold green)[$symbol($version)(\($tfm\))]($style) '
symbol = '.NET'
style = 'bright-purple'
detect_extensions = ['csproj', 'fsproj', 'xproj']
detect_files = ['global.json', 'project.json', 'Directory.Build.props', 'Directory.Build.targets', 'Packages.props']
version_format = '${major}.${minor}'
disabled = true

[custom.since_last_commit]
description = "Show time since last commit"
directories = [".git"]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--norc", "--noprofile"]
style = "fg:yellow"
format = "[󰚰 $output ]($style)"
command = """deno --allow-sys --allow-run --allow-read $TS_SCRIPTS/relative-time-commit.ts"""

[custom.git_host]
description = "Show icon of git host platform"
directories = [".git"]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--norc", "--noprofile"]
style = "fg:text"
format = "[$output ]($style)"
command = """deno --allow-sys --allow-run --allow-read $TS_SCRIPTS/github-icon.ts"""
